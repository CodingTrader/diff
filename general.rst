协议设计要点
==================================================

Differential Information Flow for Finance (DIFF) 被设计用于


设计目标
--------------------------------------------------
本协议被设计用于... 在这些方面

* 传输安全
* 简化终端编码
* 带宽自适应
* 扩展灵活性


传输协议
--------------------------------------------------
* 使用 websocket 作为传输协议

传输压缩
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
可以选择使用 websocket 的标准协议进行传输压缩

传输安全
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
在 websocket 通道上使用 ssl 实现传输层安全加密及端对端验证


数据包
--------------------------------------------------
* 每个数据包均为 json 编码的 object, UTF-8 编码
* 每个数据包中均有一个 aid 字段，此字段值即为数据包名
* 允许数据包中携带协议中未写出的额外字段，接收方可以忽略这些字段的信息
* 当数值型字段的值为 NAN 时，在json中以字符串 "NAN" 表示。


异步通讯
--------------------------------------------------
协议按双向异步结构设计，任何一方都可以随时向对方发送数据包，也应该随时准备接收对方发来的数据包。发出的包之间无需等待对方回应。


完整数据截面的差分传输
--------------------------------------------------
当从主进程向扩展进程发送数据时, 与其它很多协议不同, 天勤的通讯协议并不会按照 "类别" 或 "请求", 将数据分解为多个包发送.
相反, 天勤只使用一种包 :ref:`rtn_data`, 来将主程序内存中的全部数据 (实时行情, 历史行情, 交易数据等) 送往扩展进程.
为减少数据量, 主程序每次发送 :ref:`rtn_data` 时, 通常只包含与前次相比有差异的数据. ( **注意: 协议并不承诺无差异的数据一定不会发送** )

基于这一协议, 我们强烈建议 **扩展进程应设法维护一个完整的业务信息存储区** (在内存,数据库或文件中), 并在每次收到 :ref:`rtn_data` 时更新此存储区中的内容.
扩展进程中的业务代码, 应从这一存储区中获取业务信息, 而 **不要直接让业务逻辑处理接收到的每个:ref:`rtn_data`包**


带宽自适应机制
--------------------------------------------------



协议实现
--------------------------------------------------
基于这一协议, 我们强烈建议 **扩展进程应设法维护一个完整的业务信息存储区** (在内存,数据库或文件中), 并在每次收到 :ref:`rtn_data` 时更新此存储区中的内容.
扩展进程中的业务代码, 应从这一存储区中获取业务信息, 而 **不要直接让业务逻辑处理接收到的每个:ref:`rtn_data`包**


按功能集扩展
--------------------------------------------------
上行包:
  增加新的 aid
  
rtn_data 包:
  增加新的字段
  



