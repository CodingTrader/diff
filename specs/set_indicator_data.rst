.. _set_indicator_data:

set_indicator_data
=======================================
扩展进程 -> 主进程，发送技术指标计算结果

Example
--------------------------------------------------
.. code-block:: javascript

    {
      "aid": "set_indicator_data",                    //必填, 标示此数据包为技术指标结果数据
      "instance_id": "abc324238",                     //必填, 指标实例ID，应当与 update_indicator_instance 中的值一致
      "epoch": 1234,                                  //必填, 指标实例版本号，应当与 update_indicator_instance 中的值一致
      "range_left": 1000,                             //必填, 表示此数据包中第一个数据对应图表X轴上的位置序号
      "range_right": 2000,                            //必填, 表示此数据包中最后一个数据对应图表X轴上的位置序号
      "serials": {                                    //指标输出序列
        "some line serial":{                        //序列名称
          style: "LINE",                          //必填, 序列显示类型，"LINE"=折线, "DOT"=圆点, "BAR"=柱图, "KLINE"=K线, "RGBAR"=彩色柱图
          color: 323232,                          //可选, 序列颜色
          width: 1,                               //可选, 序列线宽
          yaxis: 0,                               //可选, 指定Y轴编号, 缺省为0
        },
        "some mark serial":{                        //序列名称
          style: "MARK",
        },
        "some kline serial":{                       //序列名称
          style: "KLINE",
        },
        "some color bar serial":{                   //彩色柱序列
          style: "COLORBAR",
        }
      },
      "datas": {
        "some line serial":[                      //这是一个折线序列，需要提供一个数组
          [100, 200, 300, ...],                   //1000个指标值
        ],
        "some mark serial":[                      //这是一个图标序列，需要提供一个数组
          [1, 0, 2, ...],                         //1000个值，每个值代表在这个X上需要放置的ICON_ID, 
        ],
        "some kline serial":[                     //这是一个K线序列，需要提供4个数组，分别表示开，高，低，收
          [150, 250, 350, ...],                   //1000个开盘价构成的序列
          [160, 260, 360, ...],                   //1000个最高价构成的序列
          [140, 240, 340, ...],                   //1000个最低价构成的序列
          [150, 250, 350, ...],                   //1000个收盘价构成的序列
        ],
        "some color bar serial":[                 //这是一个彩色柱序列，需要提供2个数组，分别表示数据值和颜色值
          [150, 250, 350, ...],                   //1000个指标值构成的序列
          [160, 260, 360, ...],                   //1000个柱子颜色构成的序列
        ],
      },
      "drawings": {
        ID1: {type: LINE, x1: 50, y1: 300, x2: 60, y2: 600, color: 505030, width: 2, style: 1}, //直线
        ID1: {type: RAY, x1: 50, y1: 300, x2: 60, y2: 600, ...},  //射线
        ID1: {type: SEG, x1: 50, y1: 300, x2: 60, y2: 600, ...}, //线段
        ID1: {type: BOX, x1: 50, y1: 300, x2: 60, y2: 600, color: 394939, width: 2}, //矩形框（空心，只画边线）
        ID1: {type: PANEL, x1: 50, y1: 300, x2: 60, y2: 600, color: 394939, width: 2}, //矩形板（实心，全部涂色）
        ID2: {type: ICON, x1: 50, y1: 300, icon: 1}, //图标
        ID3: {type: TEXT, x1: 50, y1: 300, text: abc}, //文字
      }
    }

Remarks
--------------------------------------------------
扩展进程负责计算技术指标值，并自行决定何时向主进程发送计算结果。
发送技术指标数据时，每个技术指标实例的指标值封装为一个 set_indicator_data 包，主进程收到后，会更新屏幕显示。

扩展进程发送指标计算结果，每次发送的数据大小没有规定，已经发送过的数据无须重发。

================== ===================== =====================================================================
style              数据序列个数          说明
================== ===================== =====================================================================
LINE               1                     折线图
DOT                1                     圆点图
BAR                1                     柱图
RGBAR              1                     红绿柱图，根据序列值的正负决定绘制为红色或绿色
PCBAR              1                     红绿柱图，根据对应K线颜色绘制为红色或绿色
MARK               1                     图标标记，需提供1个数据序列，代表图标编号
COLORBAR           2                     彩色柱图，需提供2个数据序列，分别代表数据值和颜色值
KLINE              4                     K线图，需提供4个数据序列，分别代表开，高，低，收
================== ===================== =====================================================================

